---
layout:     post
title:      "正则表达式入门基于python"
subtitle:   " \"Hello python World\""
date:       2018-08-05 14:00:00
author:     "LaDD"
header-img: "img/post-bg-2015.jpg"
tags:
    - Python
    - 编程
    - 正则表达式
---

## Foreword

> Watting for you!

在这里简单记录了下我学习python的过程,之前学过一点但不连续,从头开始把基础过一遍.
此篇里介绍了正则表达式常用的一些东西以及概念.

---

## 正则表达式概述

正则表达式,又称正规表达式、正规表示法、规则表达式、常规表示法（Regular Expression,在代码中常简写为regex、regexp或RE）RE,是计算机科学的一个概念.正则表达式使用一个单个字符串来描述、匹配一系列符合某个剧法规则的字符串.在很多文本编辑器里,正则表达式通常被用来检索、替换那些匹配某个模式的文本.

## re模块操作
 ### 1. re模块的使用过程

    #coding = utf-8
    # 导入re模块
    import re

    # 使用match方法进行匹配操作
    result = re.match

    #使用group方法提取数据
    result.group()
re.match是用来进行正则匹配检查的方法,若字符串匹配正则表达式,则match方法返回匹配对象,否则返回None

### 2. re模块示例
    #coding = utf-8
    # 导入re模块
    import re

    # 使用match方法进行匹配操作
    result = re.match("ladudu","ladudu.github.io")

    #使用group方法提取数据
    result.group()

运行结果:

    ladudu

### 3. 说明

- re.match()能够匹配出以xxx开头的字符串

## 单字符匹配

| 字符 | 功能 | 
| ------ | ------ |
| .  | 匹配任意一个字符(除了\n) |
| [] | 匹配[]中列举的字符 |
| \d | 匹配数字(0-9)|
| \D | 匹配非数字 |
| \s | 匹配空白(Tab或空格) |
| \S | 匹配非空白 |
| \w | 匹配单词字符,即a-z,A-Z,0-9,_ |
| \W | 匹配非单词字符|

## 原始字符串
Python中字符串前面加上r表示原始字符串.

## 匹配多个字符

| 字符 | 功能 | 
| ------ | ------ |
| *  | 匹配任意一个字符(除了\n) |
| + | 匹配[]中列举的字符 |
| ? | 匹配数字(0-9)|
| {m} | 匹配非数字 |
| {m,}| 匹配空白(Tab或空格) |
| {m,n} | 匹配非空白 |

## 匹配边界

| 字符 | 功能 | 
| ------ | ------ |
| ^  | 匹配字符串开头 |
| $  | 匹配字符串结尾 |
| \b | 匹配一个单词的边界|
| \B | 匹配非单词的边界 |

## 匹配分组

| 字符 | 功能 | 
| ------ | ------ |
| |  | 匹配左右任意一个表达式 |
| (ab)  | 将括号中字符作为一个分组  |
| \num | 引用分组num匹配到字符串 |
| (?P<name>) | 分组起名 |
| (?P=name) | 引用别名为name分组匹配到的字符串 |


    
    




